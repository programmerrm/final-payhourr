worker_processes auto;
events { worker_connections 1024; }

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;

    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=frontend_limit:10m rate=20r/s;
    limit_req_zone $binary_remote_addr zone=backend_limit:10m rate=30r/s;

    #########################################
    # HTTP -> HTTPS Redirect
    #########################################
    server {
        listen 80;
        server_name payhourr.com api.payhourr.com;

        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        location / {
            return 301 https://$host$request_uri;
        }
    }

    #########################################
    # Frontend React App
    #########################################
    server {
        listen 443 ssl http2;
        server_name payhourr.com;

        ssl_certificate     /etc/letsencrypt/live/payhourr.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/payhourr.com/privkey.pem;
        ssl_protocols       TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;

        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
        add_header X-Frame-Options SAMEORIGIN always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Permissions-Policy "geolocation=(), microphone=()" always;

        limit_req zone=frontend_limit burst=30 nodelay;

        location / {
            proxy_pass http://frontend:80;   # Frontend nginx serving at 80 inside container
            proxy_http_version 1.1;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_cache_bypass $http_upgrade;

            try_files $uri /index.html;
        }

        error_page 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }

        access_log /var/log/nginx/frontend_access.log;
        error_log  /var/log/nginx/frontend_error.log warn;
    }

    #########################################
    # Backend Django API
    #########################################
    server {
        listen 443 ssl http2;
        server_name api.payhourr.com;

        ssl_certificate     /etc/letsencrypt/live/api.payhourr.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/api.payhourr.com/privkey.pem;
        ssl_protocols       TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;

        client_max_body_size 2048M;

        add_header X-Frame-Options SAMEORIGIN always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Permissions-Policy "geolocation=(), microphone=()" always;

        limit_req zone=backend_limit burst=40 nodelay;

        location / {
            proxy_pass http://backend:8000;
            proxy_http_version 1.1;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_cache_bypass $http_upgrade;
        }

        location /static/ {
            alias /backend/staticfiles/;
            add_header Cache-Control "public, max-age=31536000, immutable";
        }

        location /media/ {
            alias /backend/media/;
        }

        error_page 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }

        access_log /var/log/nginx/backend_access.log;
        error_log  /var/log/nginx/backend_error.log warn;
    }
}

# # HTTP → HTTPS Redirect
# server {
#     listen 80;
#     server_name payhourr.com api.payhourr.com;

#     location /.well-known/acme-challenge/ {
#         root /var/www/certbot;
#         try_files $uri =404;
#     }

#     location / {
#         return 301 https://$host$request_uri;
#     }
# }

# # Frontend - React
# limit_req_zone $binary_remote_addr zone=frontend_limit:10m rate=20r/s;

# server {
#     listen 443 ssl http2;
#     server_name payhourr.com;

#     ssl_certificate /etc/letsencrypt/live/payhourr.com/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/payhourr.com/privkey.pem;

#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers HIGH:!aNULL:!MD5;
#     ssl_prefer_server_ciphers on;

#     add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
#     add_header X-Frame-Options SAMEORIGIN always;
#     add_header X-Content-Type-Options nosniff always;
#     add_header X-XSS-Protection "1; mode=block" always;
#     add_header Referrer-Policy "no-referrer-when-downgrade" always;
#     add_header Permissions-Policy "geolocation=(), microphone=()" always;

#     limit_req zone=frontend_limit burst=30 nodelay;

#     root /usr/share/nginx/html;
#     index index.html;

#     location / {
#         try_files $uri $uri/ /index.html;
#     }

#     error_page 502 503 504 /50x.html;
#     location = /50x.html {
#         root /usr/share/nginx/html;
#     }

#     access_log /var/log/nginx/frontend_access.log;
#     error_log /var/log/nginx/frontend_error.log warn;
# }

# # Backend - Django API
# limit_req_zone $binary_remote_addr zone=backend_limit:10m rate=30r/s;

# server {
#     listen 443 ssl http2;
#     server_name api.payhourr.com;

#     ssl_certificate /etc/letsencrypt/live/api.payhourr.com/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/api.payhourr.com/privkey.pem;

#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers HIGH:!aNULL:!MD5;
#     ssl_prefer_server_ciphers on;

#     add_header X-Frame-Options SAMEORIGIN always;
#     add_header X-Content-Type-Options nosniff always;
#     add_header X-XSS-Protection "1; mode=block" always;
#     add_header Referrer-Policy "no-referrer-when-downgrade" always;
#     add_header Permissions-Policy "geolocation=(), microphone=()" always;

#     limit_req zone=backend_limit burst=40 nodelay;

#     location / {
#         proxy_pass http://backend:8000;
#         proxy_http_version 1.1;

#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;

#         proxy_cache_bypass $http_upgrade;
#     }

#     location /static/ {
#         alias /app/staticfiles/;
#         add_header Cache-Control "public, max-age=31536000, immutable";
#     }

#     location /media/ {
#         alias /app/media/;
#     }

#     error_page 502 503 504 /50x.html;
#     location = /50x.html {
#         root /usr/share/nginx/html;
#     }

#     access_log /var/log/nginx/backend_access.log;
#     error_log /var/log/nginx/backend_error.log warn;
# }
# HTTP → HTTPS Redirect
server {
    listen 80;
    server_name payhourr.com api.payhourr.com;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
        try_files $uri =404;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

# Frontend - React
limit_req_zone $binary_remote_addr zone=frontend_limit:10m rate=20r/s;

server {
    listen 443 ssl http2;
    server_name payhourr.com;

    ssl_certificate /etc/letsencrypt/live/payhourr.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/payhourr.com/privkey.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header X-Frame-Options SAMEORIGIN always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Permissions-Policy "geolocation=(), microphone=()" always;

    limit_req zone=frontend_limit burst=30 nodelay;

    root /usr/share/nginx/html;  # React build folder mounted here
    index index.html;

    location / {
        try_files $uri $uri/ /index.html;
    }

    error_page 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }

    access_log /var/log/nginx/frontend_access.log;
    error_log /var/log/nginx/frontend_error.log warn;
}

# Backend - Django API
limit_req_zone $binary_remote_addr zone=backend_limit:10m rate=30r/s;

server {
    listen 443 ssl http2;
    server_name api.payhourr.com;

    ssl_certificate /etc/letsencrypt/live/api.payhourr.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.payhourr.com/privkey.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    add_header X-Frame-Options SAMEORIGIN always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Permissions-Policy "geolocation=(), microphone=()" always;

    limit_req zone=backend_limit burst=40 nodelay;

    location / {
        proxy_pass http://backend:8000;  # backend container name
        proxy_http_version 1.1;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_cache_bypass $http_upgrade;
    }

    location /static/ {
        alias /app/staticfiles/;
        add_header Cache-Control "public, max-age=31536000, immutable";
    }

    location /media/ {
        alias /app/media/;
    }

    error_page 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }

    access_log /var/log/nginx/backend_access.log;
    error_log /var/log/nginx/backend_error.log warn;
}

# version: '3.9'

# services:
#   frontend:
#     build:
#       context: ./frontend
#       dockerfile: Dockerfile.prod
#     env_file:
#       - ./frontend/.env
#     networks:
#       - pngnet
#     restart: unless-stopped

#   backend:
#     build:
#       context: ./backend
#       dockerfile: Dockerfile.prod
#     env_file:
#       - ./backend/.env.prod
#     networks:
#       - pngnet
#     depends_on:
#       - db
#       - redis
#     command: gunicorn app.wsgi:application --bind 0.0.0.0:8000 --workers 4
#     restart: unless-stopped

#   celery:
#     build:
#       context: ./backend
#       dockerfile: Dockerfile.prod
#     env_file:
#       - ./backend/.env.prod
#     networks:
#       - pngnet
#     depends_on:
#       - backend
#       - redis
#     command: celery -A app worker --loglevel=info
#     restart: unless-stopped

#   celery-beat:
#     build:
#       context: ./backend
#       dockerfile: Dockerfile.prod
#     env_file:
#       - ./backend/.env.prod
#     networks:
#       - pngnet
#     depends_on:
#       - redis
#       - backend
#     command: celery -A app beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler
#     restart: unless-stopped

#   redis:
#     image: redis:7-alpine
#     networks:
#       - pngnet
#     restart: unless-stopped

#   db:
#     image: mysql:8.1
#     env_file:
#       - ./backend/.env.prod
#     environment:
#       MYSQL_DATABASE: 'payhourr'
#       MYSQL_USER: 'payhourr'
#       MYSQL_PASSWORD: 'Payhourr1254$'
#       MYSQL_ROOT_PASSWORD: 'payhourr77$'
#     volumes:
#       - mysql_data:/var/lib/mysql
#     networks:
#       - pngnet
#     restart: unless-stopped

#   nginx:
#     image: nginx:1.24-alpine
#     ports:
#       - "80:80"
#       - "443:443"
#     depends_on:
#       - frontend
#       - backend
#     volumes:
#       - ./frontend/dist:/usr/share/nginx/html:ro
#       - ./backend/staticfiles:/app/staticfiles:ro
#       - ./backend/media:/app/media:ro
#       - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
#       - ./certbot/www:/var/www/certbot
#       - /etc/letsencrypt:/etc/letsencrypt:ro
#     networks:
#       - pngnet
#     restart: unless-stopped

# networks:
#   pngnet:
#     driver: bridge

# volumes:
#   mysql_data:
#     driver: local

version: '3.9'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    env_file:
      - ./frontend/.env
    networks:
      - pngnet
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    env_file:
      - ./backend/.env.prod
    networks:
      - pngnet
    depends_on:
      - db
      - redis
      
    command: daphne -b 0.0.0.0 -p 8000 app.asgi:application

    volumes:
      - ./backend/staticfiles:/app/staticfiles
      - ./backend/media:/app/media
    restart: unless-stopped

  celery:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    env_file:
      - ./backend/.env.prod
    networks:
      - pngnet
    depends_on:
      - backend
      - redis
    command: celery -A app worker --loglevel=info
    restart: unless-stopped

  celery-beat:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    env_file:
      - ./backend/.env.prod
    networks:
      - pngnet
    depends_on:
      - backend
      - redis
    command: celery -A app beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    networks:
      - pngnet
    restart: unless-stopped

  db:
    image: mysql:8.1
    env_file:
      - ./backend/.env.prod
    environment:
      MYSQL_DATABASE: 'payhourr'
      MYSQL_USER: 'payhourr'
      MYSQL_PASSWORD: 'Payhourr1254$'
      MYSQL_ROOT_PASSWORD: 'payhourr77$'
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - pngnet
    restart: unless-stopped

  nginx:
    image: nginx:1.24-alpine
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - frontend
      - backend
    volumes:
      - ./frontend/dist:/usr/share/nginx/html:ro
      - ./backend/staticfiles:/app/staticfiles:ro
      - ./backend/media:/app/media:ro
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./certbot/www:/var/www/certbot
      - /etc/letsencrypt:/etc/letsencrypt:ro
    networks:
      - pngnet
    restart: unless-stopped

networks:
  pngnet:
    driver: bridge

volumes:
  mysql_data:
    driver: local

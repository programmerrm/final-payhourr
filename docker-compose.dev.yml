version: '3.9'

services:
  frontend:
    container_name: frontend-dev
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    volumes:
      - ./frontend:/app/frontend
      - /app/frontend/node_modules
    env_file:
      - ./frontend/.env
    ports:
      - "3001:3001"
    networks:
      - devnet
    depends_on:
      - backend
    command: npm run dev
    restart: unless-stopped

  backend:
    container_name: backend-dev
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    volumes:
      - ./backend:/app/backend
    env_file:
      - ./backend/.env.dev
    ports:
      - "8000:8000"
    networks:
      - devnet
    depends_on:
      - redis
    command: >
      sh -c "
      python manage.py migrate &&
      daphne -p 8000 -b 0.0.0.0 app.asgi:application
      "
    restart: unless-stopped

  redis:
    container_name: redis-dev
    image: redis:6.2-alpine
    ports:
      - "6379:6379"
    networks:
      - devnet
    restart: unless-stopped

  celery:
    container_name: celery-dev
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    command: celery -A app worker -l info
    volumes:
      - ./backend:/app/backend
    env_file:
      - ./backend/.env.dev
    networks:
      - devnet
    depends_on:
      - backend
      - redis
    restart: unless-stopped

  celery-beat:
    container_name: celery-beat-dev
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    command: celery -A app beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - ./backend:/app/backend
    env_file:
      - ./backend/.env.dev
    networks:
      - devnet
    depends_on:
      - backend
      - redis
    restart: unless-stopped

networks:
  devnet:
    driver: bridge
